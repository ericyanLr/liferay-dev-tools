#!/bin/bash
#
# docker template for nginx
# host: localhost
# port: 8081 (configured via -p 8081:80)
# directory: ./html (configured via -v $(dirname ${BASH_SOURCE[0]})/html:/usr/share/nginx/html:ro)
#   can be used for adding custom web files

#Core Function
dockernginx() {
	# @description create a docker container for nginx
	# @param $1 available commands listed in usages
	# @param $... additional parameters based on inital command used
	# @output varies, depending on the command used

	local dockerimage="nginx:1.13.6-alpine"
	local containername="ldt_nginx"
	local containercmd=""
	local containeroptions=(
		"-v $(dirname ${BASH_SOURCE[0]})/html:/usr/share/nginx/html:ro"
		"-p 8081:80"
	)

	if [ -n "$1" ]; then
		case "$1" in
			'recreate'|'run'|'start')
				dockercontainer "$1" "${containername}" "${dockerimage}" "${containercmd}" "${containeroptions[@]}";;
			*)
				dockercontainer "$1" "${containername}" "${@:2:${#}}";;
		esac
	else
		dockerutil usage_display ${FUNCNAME[0]} "$(dockertemplate template_usage)"
	fi
}

#Global Variables
ldt_repo_dir="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && git rev-parse --show-toplevel)"

#External Functions
dockercontainer() {
	# @description reference dockercontainer to utilize it's functions
	# @output None

	local scriptpath="${ldt_repo_dir}/docker/dockercontainer"

	if [ -f "${scriptpath}" ]; then
		${scriptpath} "$@"
	else
		echo "Error: Could not load dockercontainer"
		return 1
	fi
}

dockertemplate() {
	# @description reference dockertemplate to utilize it's functions
	# @output None

	local scriptpath="${ldt_repo_dir}/docker/dockertemplate"

	if [ -f "${scriptpath}" ]; then
		${scriptpath} "$@"
	else
		echo "Error: Could not load dockertemplate"
		return 1
	fi
}

dockerutil() {
	# @description reference dockerutil to utilize it's functions
	# @output None

	local scriptpath="${ldt_repo_dir}/docker/dockerutil"

	if [ -f "${scriptpath}" ]; then
		${scriptpath} "$@"
	else
		echo "Error: Could not load dockerutil"
		return 1
	fi
}

verify_external_functions() {
	# @description check if external functions can be loaded, or else exit the script
	# @output None

	if !(dockercontainer > /dev/null); then dockercontainer; exit 1; fi
	if !(dockertemplate > /dev/null); then dockercontainer; exit 1; fi
	if !(dockerutil > /dev/null); then dockerutil; exit 1; fi
}

#Main
if [ "$0" = "${BASH_SOURCE}" ]; then
	verify_external_functions
	
	dockernginx "${@}"

	exit $?
fi