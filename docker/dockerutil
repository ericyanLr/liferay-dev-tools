#!/bin/bash
#
# Util functions for docker

#Global Variables
usage_display_delimiter='|||'

#Core Function
dockerutil() {
	case "$1" in
		'array_to_string_delimited')
			array_to_string_delimited "${@:2:${#}}";;
		'array_sorted_unique')
			array_sorted_unique "${@:2:${#}}";;
		'usage_display')
			usage_display "${@:2:${#}}";;
		'usage_display_formatted')
			usage_display_formatted "${@:2:${#}}";;
		'usage_options_formatted')
			usage_options_formatted "${@:2:${#}}";;
		*)
			array_to_string_delimited
			array_sorted_unique
			usage_options_formatted;;
	esac
}

#Functions
array_to_string_delimited() {
	# @description output array as a string, with delimiter as the separator
	# @description reference: https://superuser.com/a/720157
	# @param $1 delimiter 
	# @param $2 array
	# @output string output of the array, with delimiter as the separator

	if [ $# -ge 2 ] ; then
		local delimiter="$1"
		local array=("${@:2:${#}}")

		echo $(awk -v sep="$delimiter" '
			BEGIN{
				ORS=OFS="";
				for(i=1;i<ARGC;i++){
					arg=ARGV[i];
					print arg,ARGC-i-1?sep:""
				}
			}' "${array[@]}")
	else
		echo "Usage: $(basename $0) ${FUNCNAME[0]} <delimiter> <array[@]>"
	fi
}

array_sorted_unique() {
	# @description used to sort and remove duplicates from the provided array
	# @description reference: https://superuser.com/a/720157
	# @param $1 array
	# @output string output of the array, sorted and without duplicates

	if [ "${#@}" -gt 0 ]; then
		printf '%s\n' "${@}" | sort -u
	else
		echo "Usage: $(basename $0) ${FUNCNAME[0]} <array>"
	fi
}

usage_display() {
	# @description used to display usages and to make usages re-usable, with proper util name.
	# @param $1 util name
	# @param $2 usages string, formatted using usage_display_formatted
	# @output Usages formatted

	if [ $# -ge 2 ] ; then
		local util_name="$1"
		local usage_str="${@:2:${#}}"

		# Replace delmiter with newline
		usage_str="${usage_str//${usage_display_delimiter}/$'\n'}"

		echo "${usage_str}" | while read usage; do 
			echo "${usage//\$\{FUNCNAME\[0\]\}/${util_name}}"; 
		done

	else
		echo "Usage: $(basename $0) ${FUNCNAME[0]} util-name usages-display-formatted"
	fi
}

usage_display_formatted() {
	# @description used to format usages for usage_display to easily split each usage
	# @param $... usages array
	# @output string output of the array, delimited by ${usage_display_delimiter}

	array_to_string_delimited "${usage_display_delimiter}" "${@}"
}

usage_options_formatted() {
	# @description used to format usage options for consistency and readability
	# @param $... usage options array
	# @output string output of the Usage statement, formatted
	
	if [ $# -ge 1 ] ; then
		array_to_string_delimited "|" $(array_sorted_unique "${@}")
	else
		echo "Usage: $(basename $0) ${FUNCNAME[0]} <usage-options-array>"
	fi
}

#Main
if [ "$0" = "${BASH_SOURCE}" ]; then
	dockerutil "${@}"

	exit $?
fi